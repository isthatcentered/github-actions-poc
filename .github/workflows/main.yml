name: Hello world

on: [push]

jobs:
  build:
    name: Build App
    runs-on: [ubuntu-latest]
    steps: 
      - name: Import commit files
        uses: actions/checkout@master
      - name: Get yarn cache # https://github.com/actions/cache/blob/master/examples.md#node---yarn
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install Dependencies
        run: yarn install
      - name: Build
        run: yarn build
      - name: Upload bundle
        uses: actions/upload-artifact@master
        with:
          name: dist # Upload artifact with name `dist`
          path: actions # Upload content of `dist` folder 
      - name: Debug Files
        run: ls
  deploy:
    name: Deploy App
    runs-on: [ubuntu-latest]
    needs: [build]
    steps:
      - name: Download bundle
        uses: actions/download-artifact@master
        with:
          name: dist # Download artifact named `dist` (matches build step: Upload bundle)
          path: dist # Optional, downloads to current working directory under folder {artifact_name} if not specified
      - name: Debug Files
        run: ls
      - name: Upload to FTP        
        uses: isthatcentered/dist-to-ftp@master
        with:
          user: ${{ secrets.FTP_USER }}
          password: ${{ secrets.FTP_PASSWORD }}
          host: ${{ secrets.FTP_HOST }}
          path: dist
          into: web
          cleanupExisting: true


  try_stuff:
    name: Greeting

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js 12
        uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Touch file
        run: node create-random-json.js

      - name: Updload artifact
        uses: actions/upload-artifact@v1
        with:
          name: my-artifact
          path: blah.json

      - name: Use artifact
        uses: actions/download-artifact@v1
        with:
          name: my-artifact
          path: downloaded/

      - name: List artifact 
        run: ls downloaded

      - name: Hello world
        uses: ./actions/hello-world
        with:
          person: "Kanye"
        id: hello

      - name: Install deps
        run: yarn --frozen-lockfile
        env:
          CI: true

      - name: Build
        run: |
          yarn build

      - name: Deploy to ftp

        uses: isthatcentered/dist-to-ftp@master
        with:
          user: ${{ secrets.FTP_USER }}
          password: ${{ secrets.FTP_PASSWORD }}
          host: ${{ secrets.FTP_HOST }}
          path: actions
          into: web
          cleanupExisting: true

      - name: Echo the greeting's time
        run: echo 'The time was ${{ steps.hello.outputs.time }}.'

      - run: ls
